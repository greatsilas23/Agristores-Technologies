{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Separator from \"./components/Separator.js\";\nimport Card from \"./components/Card.js\";\nimport menu from \"./res/menu.png\";\nimport cart from \"./res/cart.jpg\";\nimport user from \"./res/Username.jpg\";\nimport icon from \"./res/icon.png\";\nimport coo from \"./res/coo.jpeg\";\nimport cio from \"./res/cio.jpg\";\nimport ceo from \"./res/ceo_blair.jpg\";\nimport cto from \"./res/cto.jpg\";\nimport cco from \"./res/cco.jpg\";\nimport git from \"./res/git.png\";\nimport vegetables from \"./res/vegetables.png\";\nimport fruits from \"./res/fruits.png\";\nimport beverages from \"./res/beverages.png\";\nimport liveTreesAndPlants from \"./res/live_plants.jpeg\";\nimport animalProducts from \"./res/animal_products.jpeg\";\nimport goal from \"./res/aim.svg\";\nimport mission from \"./res/mission.png\";\nimport target from \"./res/target.png\";\nimport location from \"./res/location.png\";\nimport availability from \"./res/availability.png\";\nimport year from \"./res/year.png\";\nimport sponsor from \"./res/sponsor.png\";\nimport licence from \"./res/licence.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.handleLaunch = function () {\n      _this.setState({\n        showMenu: true\n      });\n\n      _this.setState({\n        showTopBar: true\n      });\n\n      _this.setState({\n        showRoot: false\n      });\n    };\n\n    _this.state = {\n      showAbout: true,\n      showDiversification: true,\n      showDepartments: true,\n      showFeatures: true,\n      showTopBar: true,\n      separators: {\n        about: 'ABOUT',\n        diversifications: 'DIVERSIFICATION',\n        departments: 'DEPARTMENTS',\n        features: 'FEATURED',\n        forms: 'FORMS',\n        records: 'RECORDS',\n        feedback: 'FEEDBACK'\n      },\n      about: [{\n        content: 'goal',\n        description: 'To establish an online service that connects our clients with agriculture suppliers from allover the world',\n        image: goal\n      }, {\n        content: 'mission',\n        description: 'To supply agriculture globally at affordable rates',\n        image: mission\n      }, {\n        content: 'target',\n        description: 'Europe, North America, Asia',\n        image: target\n      }, {\n        content: 'location',\n        description: 'online',\n        image: location\n      }, {\n        content: 'availability',\n        description: '24 hours',\n        image: availability\n      }, {\n        content: 'year',\n        description: '2021',\n        image: year\n      }, {\n        content: 'sponsor',\n        description: 'Nyamwas-ENT',\n        image: sponsor\n      }, {\n        content: 'licence',\n        description: 'copywright 2021',\n        image: licence\n      }],\n      diversifications: [{\n        content: 'AgriPay',\n        description: 'Agripay',\n        image: git\n      }, {\n        content: 'AgriNews',\n        description: 'Agrinews',\n        image: git\n      }, {\n        content: 'Agristores Warehouses',\n        image: git\n      }, {\n        content: 'Agristores Digital Information and Information Platforms',\n        image: git\n      }, {\n        content: 'Agristores Logistics and Transport Networks',\n        image: git\n      }],\n      departments: [{\n        content: 'CCO',\n        description: 'Chief Coordination Officer',\n        image: cco\n      }, {\n        content: 'CIO',\n        description: 'Chief Internal Officer',\n        image: cio\n      }, {\n        content: 'CEO',\n        description: 'Chief Executive Officer',\n        image: ceo\n      }, {\n        content: 'COO',\n        description: 'Chief Operations Officer',\n        image: coo\n      }, {\n        content: 'CTO',\n        description: 'Chief Technology Officer',\n        image: cto\n      }],\n      features: [{\n        content: 'Vegetables',\n        image: vegetables\n      }, {\n        content: 'Fruits',\n        image: fruits\n      }, {\n        content: 'Beverages',\n        image: beverages\n      }, {\n        content: 'Live Trees And Plants',\n        image: liveTreesAndPlants\n      }, {\n        content: 'Animal Products',\n        image: animalProducts\n      }],\n      forms: {\n        executive: {\n          name: {\n            content: 'name',\n            placeholder: 'BLAIR'\n          },\n          post: {\n            content: 'department',\n            placeholder: 'CEO'\n          }\n        },\n        feature: {\n          id: {\n            content: 'ID',\n            placeholder: 'ID002'\n          },\n          feature: {\n            content: 'feature',\n            placeholder: 'VEGETABLES'\n          }\n        },\n        subsidiary: {\n          id: {\n            content: 'ID',\n            placeholder: 'ID002'\n          },\n          subsidiary: {\n            content: 'subsidiary',\n            placeholder: 'AGRIPAY'\n          }\n        }\n      },\n      records: {},\n      feedback: {}\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: styles.root,\n        children: _jsxs(ScrollView, {\n          children: [_jsx(Separator, {\n            separatorText: this.state.separators.about\n          }), _jsx(ScrollView, {\n            horizontal: true,\n            children: this.state.showAbout && this.state.about.map(function (item) {\n              return _jsx(Card, {\n                itemHeading: item.content,\n                itemDescription: item.description,\n                itemImage: item.image\n              });\n            })\n          }), _jsx(Separator, {\n            separatorText: this.state.separators.diversifications\n          }), _jsx(View, {\n            style: styles.cardContainer,\n            children: this.state.showDiversification && this.state.diversifications.map(function (diversification) {\n              return _jsx(Card, {\n                itemHeading: diversification.content,\n                itemImage: diversification.image\n              });\n            })\n          }), _jsx(Separator, {\n            separatorText: this.state.separators.departments\n          }), _jsx(View, {\n            style: styles.cardContainer,\n            children: this.state.showDepartments && this.state.departments.map(function (department) {\n              return _jsx(Card, {\n                itemHeading: department.content,\n                itemDescription: department.description,\n                itemImage: department.image\n              });\n            })\n          }), _jsx(Separator, {\n            separatorText: this.state.separators.features\n          }), _jsx(View, {\n            style: styles.cardContainer,\n            children: this.state.showFeatures && this.state.features.map(function (feature) {\n              return _jsx(Card, {\n                itemHeading: feature.content,\n                itemImage: feature.image\n              });\n            })\n          })]\n        })\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  root: {\n    width: '60vw',\n    height: '100vh',\n    backgroundColor: '#fff'\n  },\n  cardContainer: {\n    width: '60vw',\n    height: '45vh',\n    flexDirection: 'row',\n    backgroundColor: '#fff',\n    overflowX: 'scroll'\n  }\n});","map":{"version":3,"sources":["/home/silas/Desktop/Clones/Agristores-technologies/App.js"],"names":["React","Component","Separator","Card","menu","cart","user","icon","coo","cio","ceo","cto","cco","git","vegetables","fruits","beverages","liveTreesAndPlants","animalProducts","goal","mission","target","location","availability","year","sponsor","licence","App","props","handleLaunch","setState","showMenu","showTopBar","showRoot","state","showAbout","showDiversification","showDepartments","showFeatures","separators","about","diversifications","departments","features","forms","records","feedback","content","description","image","executive","name","placeholder","post","feature","id","subsidiary","styles","root","map","item","cardContainer","diversification","department","StyleSheet","create","width","height","backgroundColor","flexDirection","overflowX"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Linking, StyleSheet, Text, View, ScrollView, Image, TextInput, Button, TouchableOpacity } from 'react-native';\nimport Separator from './components/Separator.js'\nimport Card from './components/Card.js'\nimport menu from \"./res/menu.png\"\nimport cart from './res/cart.jpg'\nimport user from './res/Username.jpg'\nimport icon from './res/icon.png'\nimport coo from './res/coo.jpeg'\nimport cio from './res/cio.jpg'\nimport ceo from './res/ceo_blair.jpg'\nimport cto from './res/cto.jpg'\nimport cco from './res/cco.jpg'\nimport git from './res/git.png'\nimport vegetables from './res/vegetables.png'\nimport fruits from './res/fruits.png'\nimport beverages from './res/beverages.png'\nimport liveTreesAndPlants from './res/live_plants.jpeg'\nimport animalProducts from './res/animal_products.jpeg'\nimport goal from './res/aim.svg'\nimport mission from './res/mission.png'\nimport target from './res/target.png'\nimport location from './res/location.png'\nimport availability from './res/availability.png'\nimport year from './res/year.png'\nimport sponsor from './res/sponsor.png'\nimport licence from './res/licence.png'\n\nexport default class App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n        showAbout: true,\n        showDiversification: true,\n        showDepartments: true,\n        showFeatures: true,\n        showTopBar: true,\n        separators: {\n            about: 'ABOUT',\n            diversifications: 'DIVERSIFICATION',\n            departments: 'DEPARTMENTS',\n            features: 'FEATURED',\n            forms: 'FORMS',\n            records: 'RECORDS',\n            feedback: 'FEEDBACK'\n        },\n        about: [\n            {content: 'goal', description: 'To establish an online service that connects our clients with agriculture suppliers from allover the world', image: goal },\n            {content: 'mission', description: 'To supply agriculture globally at affordable rates', image: mission},\n            {content: 'target', description: 'Europe, North America, Asia', image: target},\n            {content: 'location', description: 'online', image: location},\n            {content: 'availability', description: '24 hours', image: availability},\n            {content: 'year', description: '2021', image: year},\n            {content: 'sponsor', description: 'Nyamwas-ENT', image: sponsor},\n            {content: 'licence', description: 'copywright 2021', image: licence}\n        ],\n        diversifications: [\n            {content: 'AgriPay', description: 'Agripay', image: git},\n            {content: 'AgriNews', description: 'Agrinews', image: git},\n            {content: 'Agristores Warehouses', image: git},\n            {content: 'Agristores Digital Information and Information Platforms', image: git},\n            {content: 'Agristores Logistics and Transport Networks', image: git}\n        ],\n        departments: [\n            {content: 'CCO', description: 'Chief Coordination Officer', image: cco},\n            {content: 'CIO', description: 'Chief Internal Officer', image: cio},\n            {content: 'CEO', description: 'Chief Executive Officer', image: ceo},\n            {content: 'COO', description: 'Chief Operations Officer', image: coo},\n            {content: 'CTO', description: 'Chief Technology Officer', image: cto}\n        ],\n        features: [\n            {content: 'Vegetables', image: vegetables},\n            {content: 'Fruits', image: fruits},\n            {content: 'Beverages', image: beverages},\n            {content: 'Live Trees And Plants', image: liveTreesAndPlants},\n            {content: 'Animal Products', image: animalProducts},\n        ],\n        forms: {\n            executive: {\n                name: {\n                    content: 'name',\n                    placeholder: 'BLAIR'\n                },\n                post: {\n                    content: 'department',\n                    placeholder: 'CEO'\n                }\n            },\n            feature: {\n                id: {\n                    content: 'ID',\n                    placeholder: 'ID002'\n                },\n                feature: {\n                    content: 'feature',\n                    placeholder: 'VEGETABLES'\n                }\n            },\n            subsidiary: {\n                id: {\n                    content: 'ID',\n                    placeholder: 'ID002'\n                },\n                subsidiary: {\n                    content: 'subsidiary',\n                    placeholder: 'AGRIPAY'\n                }\n            }\n        },\n        records: {},\n        feedback: {}\n    }\n  }\n  handleLaunch = () => {\n    this.setState({ showMenu: true})\n    this.setState({ showTopBar: true})\n    this.setState({ showRoot: false})\n  }\n\n  render(){\n      return (\n        <View\n            style={styles.root}\n        >\n            <ScrollView>\n                <Separator\n                    separatorText={this.state.separators.about}></Separator>\n                <ScrollView horizontal={true} >\n                {this.state.showAbout &&\n                    this.state.about.map((item) => <Card itemHeading={item.content} itemDescription={item.description} itemImage={item.image}></Card>)\n                }\n                </ScrollView>\n                <Separator separatorText={this.state.separators.diversifications}></Separator>\n                <View style={styles.cardContainer}>\n                {this.state.showDiversification &&\n                    this.state.diversifications.map((diversification) => <Card itemHeading={diversification.content} itemImage={diversification.image}></Card>)\n                }\n                </View>\n                <Separator separatorText={this.state.separators.departments}></Separator>\n                <View style={styles.cardContainer}>\n                {this.state.showDepartments &&\n                    this.state.departments.map((department) => <Card itemHeading={department.content} itemDescription={department.description} itemImage={department.image}></Card>)\n                }\n                </View>\n                <Separator separatorText={this.state.separators.features}></Separator>\n                <View style={styles.cardContainer}>\n                {this.state.showFeatures &&\n                    this.state.features.map((feature) => <Card itemHeading={feature.content} itemImage={feature.image}></Card>)\n                }\n                </View>\n            </ScrollView>\n        </View>\n      )\n  }\n}\nconst styles = StyleSheet.create({\n    root: {\n        width: '60vw',\n        height: '100vh',\n        backgroundColor: '#fff'\n    },\n    cardContainer: {\n        width: '60vw',\n        height: '45vh',\n        flexDirection : 'row',\n        backgroundColor: '#fff',\n        overflowX: 'scroll'\n    }\n})\n"]},"metadata":{},"sourceType":"module"}